 Обработчик команды /help
@router.message(Command("help"))
async def start_question(message: Message, state: FSMContext):
    await state.set_state(QuestionStates.waiting_for_question)
    await state.update_data(chat_id=message.chat.id, user_id=message.from_user.id)
    await message.reply("С чем вам помочь? Отправьте свой вопрос.")

# Обработчик вопроса
@router.message(QuestionStates.waiting_for_question)
async def handle_question_response(message: Message, state: FSMContext):
    data = await state.get_data()
    if message.chat.id != data.get("chat_id") or message.from_user.id != data.get("user_id"):
        return
    await state.clear()

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": message.text}],
            temperature=0.7,
        )
        answer = response['choices'][0]['message']['content']
        await message.reply(f"Вот что я думаю:\n\n{answer}")
    except Exception as e:
        logging.error(f"Ошибка OpenAI: {e}")
        await message.reply("Не удалось получить ответ. Попробуйте позже.")
